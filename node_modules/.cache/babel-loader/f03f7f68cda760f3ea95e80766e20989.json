{"ast":null,"code":"import _classCallCheck from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiayunjie/Desktop/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStore } from 'redux';\nimport './App.css'; // Redux\n// Action constants\n\nvar GET_QUOTE = 'GET_QUOTE'; // reducer\n\nvar defaultValue = [];\n\nvar quoteReducer = function quoteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultValue;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACTIONS.GET_QUOTE:\n      return state;\n\n    default:\n      return state;\n  }\n}; // actions\n\n\nvar getQuotes = function getQuotes() {\n  return {\n    type: GET_QUOTE\n  };\n}; // store\n\n\nvar store = createStore(quoteReducer);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"quote-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuotes: function getQuotes() {\n      return dispatch({\n        type: ACTIONS.GET_QUOTE\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jiayunjie/Desktop/random-quote-machine/src/App.js"],"names":["React","Component","connect","createStore","GET_QUOTE","defaultValue","quoteReducer","state","action","type","ACTIONS","getQuotes","store","App","mapStateToProps","quotes","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAO,WAAP,C,CAEA;AACA;;AACA,IAAMC,SAAS,GAAG,WAAlB,C,CACA;;AACA,IAAMC,YAAY,GAAG,EAArB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,OAAO,CAACN,SAAb;AACE,aAAOG,KAAP;;AACF;AACE,aAAOA,KAAP;AAJJ;AAMD,CAPD,C,CAQA;;;AACA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAO;AACLF,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJD,C,CAKA;;;AACA,IAAMQ,KAAK,GAAGT,WAAW,CAACG,YAAD,CAAzB;;IAEMO,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;;;EAPeZ,S;;AAUlB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAW;AACjC,SAAO;AACLQ,IAAAA,MAAM,EAAER;AADH,GAAP;AAGD,CAJD;;AAKA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLN,IAAAA,SAAS,EAAE;AAAA,aAAMM,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAEC,OAAO,CAACN;AAAhB,OAAD,CAAd;AAAA;AADN,GAAP;AAGD,CAJD;;AAKA,eAAeF,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { createStore } from 'redux'\nimport './App.css';\n\n// Redux\n// Action constants\nconst GET_QUOTE = 'GET_QUOTE'\n// reducer\nconst defaultValue = []\nconst quoteReducer = (state = defaultValue, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_QUOTE:\n      return state\n    default:\n      return state\n  }\n}\n// actions\nconst getQuotes = () => {\n  return {\n    type: GET_QUOTE\n  }\n}\n// store\nconst store = createStore(quoteReducer)\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"quote-box\">\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quotes: state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuotes: () => dispatch({ type: ACTIONS.GET_QUOTE })\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}