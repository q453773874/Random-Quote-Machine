{"ast":null,"code":"import _classCallCheck from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiayunjie/Desktop/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  // Redux\n  // Action constants\n  // style\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.GET_QUOTE = 'GET_QUOTE';\n    _this.color = 'red';\n    _this.appStyle = {\n      backgroundColor: color,\n      height: '100vh'\n    };\n    _this.textBoxStyle = {\n      position: 'absolute',\n      backgroundColor: 'white',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,0)',\n      padding: '20px',\n      width: '40vw'\n    };\n    _this.textStyle = {\n      color: color\n    };\n    _this.authorStyle = {\n      color: color,\n      textAlign: 'right'\n    };\n    _this.leftButtonStyle = {\n      borderRadius: '5px 5px 5px 5px',\n      fontSize: '20px',\n      marginTop: '10px',\n      color: 'white',\n      backgroundColor: color,\n      float: 'left'\n    };\n    _this.rightButtonStyle = {\n      borderRadius: '5px 5px 5px 5px',\n      padding: '10px',\n      marginTop: '10px',\n      color: 'white',\n      backgroundColor: color,\n      float: 'right'\n    };\n\n    _this.onGetNewQuote = function () {\n      _this.props.getQuotes();\n\n      color = 'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')';\n      alert(JSON.stringify(rightButtonStyle));\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getQuotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: appStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: textBoxStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"text\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.quote.content), React.createElement(\"div\", {\n        id: \"author\",\n        style: authorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"-\", this.props.quote.author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        target: \"_blank\",\n        href: \"twitter.com/intent/tweet\",\n        style: leftButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fab fa-twitter-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        id: \"new-quote\",\n        style: rightButtonStyle,\n        onClick: this.onGetNewQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"New Quote\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quote: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuotes: function getQuotes() {\n      dispatch({\n        type: GET_QUOTE\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jiayunjie/Desktop/random-quote-machine/src/App.js"],"names":["React","Component","connect","App","props","GET_QUOTE","color","appStyle","backgroundColor","height","textBoxStyle","position","top","left","transform","padding","width","textStyle","authorStyle","textAlign","leftButtonStyle","borderRadius","fontSize","marginTop","float","rightButtonStyle","onGetNewQuote","getQuotes","Math","floor","random","alert","JSON","stringify","quote","content","author","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\n\n\nclass App extends Component {\n  // Redux\n  // Action constants\n  GET_QUOTE = 'GET_QUOTE'\n  // style\n  color = 'red'\n  appStyle = {\n    backgroundColor: color,\n    height: '100vh'\n  }\n  textBoxStyle = {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%,0)',\n    padding: '20px',\n    width: '40vw'\n  }\n  textStyle = {\n    color: color,\n  }\n  authorStyle = {\n    color: color,\n    textAlign: 'right'\n  }\n  leftButtonStyle = {\n    borderRadius: '5px 5px 5px 5px',\n    fontSize: '20px',\n    marginTop: '10px',\n    color: 'white',\n    backgroundColor: color,\n    float: 'left'\n  }\n  rightButtonStyle = {\n    borderRadius: '5px 5px 5px 5px',\n    padding: '10px',\n    marginTop: '10px',\n    color: 'white',\n    backgroundColor: color,\n    float: 'right'\n  }\n  constructor(props) {\n    super(props)\n  }\n  componentDidMount() {\n    this.props.getQuotes()\n  }\n  onGetNewQuote = () => {\n    this.props.getQuotes()\n    color =\n      'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')'\n    alert(JSON.stringify(rightButtonStyle))\n  }\n  render() {\n\n    return (\n      <div style={appStyle}>\n        <div id=\"quote-box\" style={textBoxStyle}>\n          <div id=\"text\" style={textStyle}>\n            {this.props.quote.content}\n          </div>\n          <div id=\"author\" style={authorStyle}>-{this.props.quote.author}</div>\n          <div>\n            <p><a id=\"tweet-quote\" target=\"_blank\" href=\"twitter.com/intent/tweet\" style={leftButtonStyle}><i class=\"fab fa-twitter-square\"></i></a></p>\n            <button id=\"new-quote\" style={rightButtonStyle} onClick={this.onGetNewQuote}>New Quote</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quote: state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuotes: () => { dispatch({ type: GET_QUOTE }) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}