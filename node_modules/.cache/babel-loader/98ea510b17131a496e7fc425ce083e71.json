{"ast":null,"code":"import _classCallCheck from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiayunjie/Desktop/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css'; // Redux\n// Action constants\n\nvar GET_QUOTE = 'GET_QUOTE';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGetNewQuote = function () {\n      _this.props.getQuotes();\n\n      var color = 'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')';\n      appStyle.backgroundColor = \"blue\";\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getQuotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // style\n      var color = 'rgb(44, 62, 80)';\n      var appStyle = {\n        backgroundColor: color,\n        height: '100vh'\n      };\n      var textBoxStyle = {\n        position: 'absolute',\n        backgroundColor: 'white',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,0)',\n        padding: '20px',\n        width: '40vw',\n        borderRadius: '10px 10px 10px 10px'\n      };\n      var textStyle = {\n        color: color\n      };\n      var authorStyle = {\n        color: color,\n        textAlign: 'right'\n      };\n      var leftButtonStyle = {\n        borderRadius: '5px 5px 5px 5px',\n        fontSize: '20px',\n        marginTop: '10px',\n        color: 'white',\n        backgroundColor: color,\n        float: 'left'\n      };\n      var rightButtonStyle = {\n        borderRadius: '5px 5px 5px 5px',\n        padding: '10px',\n        marginTop: '10px',\n        color: 'white',\n        backgroundColor: color,\n        float: 'right'\n      };\n      return React.createElement(\"div\", {\n        style: appStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: textBoxStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"text\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.quote.content), React.createElement(\"div\", {\n        id: \"author\",\n        style: authorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"-\", this.props.quote.author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        target: \"_blank\",\n        href: \"twitter.com/intent/tweet\",\n        style: leftButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fab fa-twitter-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        id: \"new-quote\",\n        style: rightButtonStyle,\n        onClick: this.onGetNewQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"New Quote\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quote: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuotes: function getQuotes() {\n      dispatch({\n        type: GET_QUOTE\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jiayunjie/Desktop/random-quote-machine/src/App.js"],"names":["React","Component","connect","GET_QUOTE","App","props","onGetNewQuote","getQuotes","color","Math","floor","random","appStyle","backgroundColor","height","textBoxStyle","position","top","left","transform","padding","width","borderRadius","textStyle","authorStyle","textAlign","leftButtonStyle","fontSize","marginTop","float","rightButtonStyle","quote","content","author","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\n// Redux\n// Action constants\nconst GET_QUOTE = 'GET_QUOTE'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n  componentDidMount() {\n    this.props.getQuotes()\n  }\n  onGetNewQuote = () => {\n    this.props.getQuotes()\n    const color =\n      'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')'\n    appStyle.backgroundColor = \"blue\"\n\n  }\n  render() {\n    // style\n    let color = 'rgb(44, 62, 80)'\n    let appStyle = {\n      backgroundColor: color,\n      height: '100vh',\n    }\n    const textBoxStyle = {\n      position: 'absolute',\n      backgroundColor: 'white',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,0)',\n      padding: '20px',\n      width: '40vw',\n      borderRadius: '10px 10px 10px 10px'\n    }\n    let textStyle = {\n      color: color,\n    }\n    let authorStyle = {\n      color: color,\n      textAlign: 'right'\n    }\n    let leftButtonStyle = {\n      borderRadius: '5px 5px 5px 5px',\n      fontSize: '20px',\n      marginTop: '10px',\n      color: 'white',\n      backgroundColor: color,\n      float: 'left'\n    }\n    let rightButtonStyle = {\n      borderRadius: '5px 5px 5px 5px',\n      padding: '10px',\n      marginTop: '10px',\n      color: 'white',\n      backgroundColor: color,\n      float: 'right'\n    }\n\n\n\n    return (\n      <div style={appStyle}>\n        <div id=\"quote-box\" style={textBoxStyle}>\n          <div id=\"text\" style={textStyle}>\n            {this.props.quote.content}\n          </div>\n          <div id=\"author\" style={authorStyle}>-{this.props.quote.author}</div>\n          <div>\n            <p><a id=\"tweet-quote\" target=\"_blank\" href=\"twitter.com/intent/tweet\" style={leftButtonStyle}><i class=\"fab fa-twitter-square\"></i></a></p>\n            <button id=\"new-quote\" style={rightButtonStyle} onClick={this.onGetNewQuote}>New Quote</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quote: state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuotes: () => { dispatch({ type: GET_QUOTE }) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}