{"ast":null,"code":"import _classCallCheck from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _readOnlyError from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/jiayunjie/Desktop/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css'; // Redux\n// Action constants\n\nvar GET_QUOTE = 'GET_QUOTE'; // style\n\nvar color = 'red';\nvar appStyle = {\n  backgroundColor: color,\n  height: '100vh'\n};\nvar textBoxStyle = {\n  position: 'absolute',\n  backgroundColor: 'white',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,0)',\n  padding: '20px',\n  width: '40vw'\n};\nvar textStyle = {\n  color: color\n};\nvar authorStyle = {\n  color: color,\n  textAlign: 'right'\n};\nvar leftButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  fontSize: '20px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'left'\n};\nvar rightButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'right'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onGetNewQuote = function () {\n      _this.props.getQuotes();\n\n      color = (_readOnlyError(\"color\"), 'rgb(' + Math.random(0, 256) + ',' + Math.random(0, 256) + ',' + Math.random(0, 256) + ',' + ')');\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: appStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: textBoxStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"text\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.quotes[0].content), React.createElement(\"div\", {\n        id: \"author\",\n        style: authorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"-\", this.props.quotes[0].author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"tweet-quote\",\n        style: leftButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fab fa-twitter-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"new-quote\",\n        style: rightButtonStyle,\n        onClick: this.onGetNewQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"New Quote\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuotes: function getQuotes() {\n      return dispatch({\n        type: GET_QUOTE\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jiayunjie/Desktop/random-quote-machine/src/App.js"],"names":["React","Component","connect","GET_QUOTE","color","appStyle","backgroundColor","height","textBoxStyle","position","top","left","transform","padding","width","textStyle","authorStyle","textAlign","leftButtonStyle","borderRadius","fontSize","marginTop","float","rightButtonStyle","App","onGetNewQuote","props","getQuotes","Math","random","quotes","content","author","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\n// Redux\n// Action constants\nconst GET_QUOTE = 'GET_QUOTE'\n// style\nconst color = 'red'\nconst appStyle = {\n  backgroundColor: color,\n  height: '100vh'\n}\nconst textBoxStyle = {\n  position: 'absolute',\n  backgroundColor: 'white',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,0)',\n  padding: '20px',\n  width: '40vw'\n}\nconst textStyle = {\n  color: color,\n}\nconst authorStyle = {\n  color: color,\n  textAlign: 'right'\n}\nconst leftButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  fontSize: '20px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'left'\n}\nconst rightButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'right'\n}\n\nclass App extends Component {\n  onGetNewQuote = () => {\n    this.props.getQuotes()\n    color = 'rgb(' + Math.random(0, 256) + ',' + Math.random(0, 256) + ',' + Math.random(0, 256) + ',' + ')'\n  }\n  render() {\n    return (\n      <div style={appStyle}>\n        <div id=\"quote-box\" style={textBoxStyle}>\n          <div id=\"text\" style={textStyle}>\n            {this.props.quotes[0].content}\n          </div>\n          <div id=\"author\" style={authorStyle}>-{this.props.quotes[0].author}</div>\n          <div>\n            <button id=\"tweet-quote\" style={leftButtonStyle}><i class=\"fab fa-twitter-square\"></i></button>\n            <button id=\"new-quote\" style={rightButtonStyle} onClick={this.onGetNewQuote}>New Quote</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quotes: state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuotes: () => dispatch({ type: GET_QUOTE })\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}