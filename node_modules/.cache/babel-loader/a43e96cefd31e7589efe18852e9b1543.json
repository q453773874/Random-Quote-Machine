{"ast":null,"code":"import _classCallCheck from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiayunjie/Desktop/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css'; // Redux\n// Action constants\n\nvar GET_QUOTE = 'GET_QUOTE'; // style\n\nvar color = 'red';\nvar appStyle = {\n  backgroundColor: color,\n  height: '100vh'\n};\nvar textBoxStyle = {\n  position: 'absolute',\n  backgroundColor: 'white',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,0)',\n  padding: '20px',\n  width: '40vw'\n};\nvar textStyle = {\n  color: color\n};\nvar authorStyle = {\n  color: color,\n  textAlign: 'right'\n};\nvar leftButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  fontSize: '20px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'left'\n};\nvar rightButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'right'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGetNewQuote = function () {\n      var quoteFromStore = _this.props.getQuotes(); // this.setState({\n      //   quote: {\n      //     content: quoteFromStore.content,\n      //     author: quoteFromStore.author\n      //   }\n      // })\n\n\n      color = 'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')';\n    };\n\n    _this.state = {\n      quote: {\n        content: '',\n        author: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var quoteFromStore = this.props.getQuotes();\n\n      if (quoteFromStore) {\n        this.setState({\n          quote: {\n            content: quoteFromStore.content,\n            author: quoteFromStore.author\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: appStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: textBoxStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"text\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.quote.content), React.createElement(\"div\", {\n        id: \"author\",\n        style: authorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"-\", this.state.quote.author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        target: \"_blank\",\n        href: \"twitter.com/intent/tweet\",\n        style: leftButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fab fa-twitter-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        id: \"new-quote\",\n        style: rightButtonStyle,\n        onClick: this.onGetNewQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"New Quote\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuotes: function getQuotes() {\n      dispatch({\n        type: GET_QUOTE\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jiayunjie/Desktop/random-quote-machine/src/App.js"],"names":["React","Component","connect","GET_QUOTE","color","appStyle","backgroundColor","height","textBoxStyle","position","top","left","transform","padding","width","textStyle","authorStyle","textAlign","leftButtonStyle","borderRadius","fontSize","marginTop","float","rightButtonStyle","App","props","onGetNewQuote","quoteFromStore","getQuotes","Math","floor","random","state","quote","content","author","setState","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\n// Redux\n// Action constants\nconst GET_QUOTE = 'GET_QUOTE'\n// style\nlet color = 'red'\nconst appStyle = {\n  backgroundColor: color,\n  height: '100vh'\n}\nconst textBoxStyle = {\n  position: 'absolute',\n  backgroundColor: 'white',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,0)',\n  padding: '20px',\n  width: '40vw'\n}\nconst textStyle = {\n  color: color,\n}\nconst authorStyle = {\n  color: color,\n  textAlign: 'right'\n}\nconst leftButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  fontSize: '20px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'left'\n}\nconst rightButtonStyle = {\n  borderRadius: '5px 5px 5px 5px',\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'right'\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      quote: { content: '', author: '' }\n    }\n  }\n  componentDidMount() {\n    const quoteFromStore = this.props.getQuotes()\n    if (quoteFromStore) {\n\n      this.setState({\n        quote: {\n          content: quoteFromStore.content,\n          author: quoteFromStore.author\n        }\n      })\n    }\n  }\n  onGetNewQuote = () => {\n    const quoteFromStore = this.props.getQuotes()\n    // this.setState({\n    //   quote: {\n    //     content: quoteFromStore.content,\n    //     author: quoteFromStore.author\n    //   }\n    // })\n    color =\n      'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')'\n  }\n  render() {\n\n    return (\n      <div style={appStyle}>\n        <div id=\"quote-box\" style={textBoxStyle}>\n          <div id=\"text\" style={textStyle}>\n            {this.state.quote.content}\n          </div>\n          <div id=\"author\" style={authorStyle}>-{this.state.quote.author}</div>\n          <div>\n            <p><a id=\"tweet-quote\" target=\"_blank\" href=\"twitter.com/intent/tweet\" style={leftButtonStyle}><i class=\"fab fa-twitter-square\"></i></a></p>\n            <button id=\"new-quote\" style={rightButtonStyle} onClick={this.onGetNewQuote}>New Quote</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuotes: () => { dispatch({ type: GET_QUOTE }) }\n  }\n}\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}