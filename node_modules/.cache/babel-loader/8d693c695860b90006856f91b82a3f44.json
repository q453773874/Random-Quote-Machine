{"ast":null,"code":"import _classCallCheck from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayunjie/Desktop/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiayunjie/Desktop/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css'; // Redux\n// Action constants\n\nvar GET_QUOTE = 'GET_QUOTE'; // style\n\nvar color = 'red';\nvar appStyle = {\n  backgroundColor: color,\n  height: '100vh'\n};\nvar textBoxStyle = {\n  position: 'absolute',\n  backgroundColor: 'white',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,0)',\n  padding: '20px',\n  width: '40vw'\n};\nvar textStyle = {\n  color: color,\n  marginTop: '20px',\n  marginLeft: '20px'\n};\nvar authorStyle = {\n  color: color,\n  textAlign: 'right'\n};\nvar leftButtonStyle = {\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'left'\n};\nvar rightButtonStyle = {\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'right'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: appStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: textBoxStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"text\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.quotes[0].content), React.createElement(\"div\", {\n        id: \"author\",\n        style: authorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"-\", this.props.quotes[0].author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"new-quote\",\n        style: leftButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fab fa-twitter-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"new-quote\",\n        style: rightButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"New Quote\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuotes: function getQuotes() {\n      return dispatch({\n        type: GET_QUOTE\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jiayunjie/Desktop/random-quote-machine/src/App.js"],"names":["React","Component","connect","GET_QUOTE","color","appStyle","backgroundColor","height","textBoxStyle","position","top","left","transform","padding","width","textStyle","marginTop","marginLeft","authorStyle","textAlign","leftButtonStyle","float","rightButtonStyle","App","props","quotes","content","author","mapStateToProps","state","mapDispatchToProps","dispatch","getQuotes","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\n// Redux\n// Action constants\nconst GET_QUOTE = 'GET_QUOTE'\n// style\nconst color = 'red'\nconst appStyle = {\n  backgroundColor: color,\n  height: '100vh'\n}\nconst textBoxStyle = {\n  position: 'absolute',\n  backgroundColor: 'white',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%,0)',\n  padding: '20px',\n  width: '40vw'\n}\nconst textStyle = {\n  color: color,\n  marginTop: '20px',\n  marginLeft: '20px',\n}\nconst authorStyle = {\n  color: color,\n  textAlign: 'right'\n}\nconst leftButtonStyle = {\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'left'\n}\nconst rightButtonStyle = {\n  padding: '10px',\n  marginTop: '10px',\n  color: 'white',\n  backgroundColor: color,\n  float: 'right'\n}\nclass App extends Component {\n  render() {\n    return (\n      <div style={appStyle}>\n        <div id=\"quote-box\" style={textBoxStyle}>\n          <div id=\"text\" style={textStyle}>\n            {this.props.quotes[0].content}\n          </div>\n          <div id=\"author\" style={authorStyle}>-{this.props.quotes[0].author}</div>\n          <div>\n            <button id=\"new-quote\" style={leftButtonStyle}><i class=\"fab fa-twitter-square\"></i></button>\n            <button id=\"new-quote\" style={rightButtonStyle}>New Quote</button>\n          </div>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quotes: state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuotes: () => dispatch({ type: GET_QUOTE })\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}